AWSTemplateFormatVersion: "2010-09-09"

Description:
  Template for establishing CDN for static website in serverless lab.
  DNS is in another template due to problems with rolling back certificates from CloudFront.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Website DNS Configuration
        Parameters:
          - stage
          - domain
          - cert
    ParameterLabels:
      stage:
        default: Deployment Stage (eg dev or prod)
      domain:
        default: Website Domain Name
      cert:
        default: ARN of certificate for domain

Parameters:
  stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    MinLength: 2
    MaxLength: 8
    AllowedPattern: ^[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]$
    ConstraintDescription: 3 to 8 upper case, lower case or dashes, must not start or end with a dash

  domain:
    Type: String
    MinLength: 3
    MaxLength: 64
    AllowedPattern: ^[A-Za-z0-9][A-Za-z0-9\-\.]*[A-Za-z0-9]$
    ConstraintDescription: 3 to 8 upper case, lower case or dashes, must not start or end with a dash

  cert:
    Type: String
    MinLength: 24
    MaxLength: 128
    # Force certificate from us-east-1 since that is what cloudrfront expects
    AllowedPattern: ^arn:aws:acm:us-east-1:[0-9]*:certificate\/[A-Za-z0-9][A-Za-z0-9\-\:]*[A-Za-z0-9]$
    ConstraintDescription: 3 to 64 upper case, lower case, colons or dashes, must not start or end with a dot or dash

Mappings:
  RegionMap:
    ap-northeast-1:
      S3hostedzoneID: "Z2M4EHUR26P7ZW"
      webSiteEndPoint: "s3-website-ap-northeast-1.amazonaws.com"
    ap-northeast-2:
      S3hostedzoneID: "Z3W03O7B5YMIYP"
      webSiteEndPoint: "s3-website.ap-northeast-2.amazonaws.com"
    ap-south-1:
      S3hostedzoneID: "Z11RGJOFQNVJUP"
      webSiteEndPoint: "s3-website.ap-south-1.amazonaws.com"
    ap-southeast-1:
      S3hostedzoneID: "Z3O0J2DXBE1FTB"
      webSiteEndPoint: "s3-website-ap-southeast-1.amazonaws.com"
    ap-southeast-2:
      S3hostedzoneID: "Z1WCIGYICN2BYD"
      webSiteEndPoint: "s3-website-ap-southeast-2.amazonaws.com"
    eu-central-1:
      S3hostedzoneID: "Z21DNDUVLTQW6Q"
      webSiteEndPoint: "s3-website.eu-central-1.amazonaws.com"
    eu-west-1:
      S3hostedzoneID: "Z1BKCTXD74EZPE"
      webSiteEndPoint: "s3-website-eu-west-1.amazonaws.com"
    sa-east-1:
      S3hostedzoneID: "Z7KQH4QJS55SO"
      webSiteEndPoint: "s3-website-sa-east-1.amazonaws.com"
    us-east-1:
      S3hostedzoneID: "Z3AQBSTGFYJSTF"
      webSiteEndPoint: "s3-website-us-east-1.amazonaws.com"
    us-east-2:
      S3hostedzoneID: "Z2O1EMRO9K5GLX"
      webSiteEndPoint: "s3-website.us-east-2.amazonaws.com"
    us-west-1:
      S3hostedzoneID: "Z2F56UZL2M1ACD"
      webSiteEndPoint: "s3-website-us-west-1.amazonaws.com"
    us-west-2:
      S3hostedzoneID: "Z3BJ6K6RIION7M"
      webSiteEndPoint: "s3-website-us-west-2.amazonaws.com"

Conditions: 
  prodResources: !Equals [ !Ref stage, prod ]

Resources:
  webSite:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html

  webSitePolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref webSite
      PolicyDocument:
        Statement: 
          - 
            Action: 
              - "s3:GetObject"
            Effect: "Allow"
            Resource: 
              !Join ["", ["arn:aws:s3:::", !Ref webSite, "/*"]]
            Principal: "*"

  CDN:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref cert
          SslSupportMethod: sni-only
        Enabled: true
        HttpVersion: http2
        Aliases:
          - !Join [".", [!Ref stage, !Ref domain]]
          - !If [prodResources, !Join [".", ["www", !Ref domain]], !Ref "AWS::NoValue"]
        DefaultRootObject: index.html
        Origins:
          - DomainName:
              !Join [".", [!Ref webSite, !FindInMap [RegionMap, !Ref "AWS::Region", webSiteEndPoint]]]
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 30
          MinTTL: 10
          ForwardedValues:
            QueryString: true

Outputs:
  S3WebSiteUrl:
    Value: !GetAtt [webSite, WebsiteURL]
  S3WebSiteBucket:
    Value: !Ref webSite
  Stage:
    Value: !Ref stage
  Domain:
    Value: !Ref domain
    Description: Domain for website
  CDNDomainName:
    Value: !GetAtt CDN.DomainName
    Description: CDN Domain Name
  DNS:
    Description: DNS name for website
    Value: !Join [".", [!Ref stage, !Ref domain]]
  AliasDNS:
    Condition: prodResources
    Description: DNS alias for website
    Value: !Join [".", ["www", !Ref domain]]
